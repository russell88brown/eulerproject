/*
https://projecteuler.net/problem=2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

var fibonacciSequence = [];
var fibonacciEvenSequence = [];
var answer;

function main() {
	fibonacciSequence = generateSequence();
	console.log("generated Fibonacci Sequence: " + fibonacciSequence)
	fibonacciEvenSequence = generateEvenSequece();
	console.log("even sequence: " + fibonacciEvenSequence)
	answer = sumArray(fibonacciEvenSequence)
	console.log('answer: ' + answer)

}

function generateSequence() {
	sequence = [1,2];
	generateNumber = 2
	do {
		evaluateNumber = (sequence[generateNumber - 1]+sequence[generateNumber -2])
		sequence.push(evaluateNumber);
		generateNumber++;
	} while (evaluateNumber < 4000000);
	return sequence;
};

function generateEvenSequece() {
	arrayLength = fibonacciSequence.length;
	sequence = [];
	for (i = 0; i < (arrayLength -1); i ++) {
		if (checkEven(fibonacciSequence[i]) === true) {
			sequence.push(fibonacciSequence[i])
		};
	};
	return sequence;
};

function checkEven(numberToCheck) {
	if ( (numberToCheck/2) === Math.round(numberToCheck/2) ) {
		return true;
	} else {return false};
}

function sumArray(array) {
	var output = array.reduce(function(sum, value) {
  		return sum + value;
	}, 0);	
	return output
};


main();